/* This code is defining a React component called `RootLayout`. It is a layout component that wraps the
entire application and provides common layout elements such as the head section, navigation bar, and
footer. */
import '@/styles/globals.css';
import type { Metadata } from 'next';
import dynamic from 'next/dynamic';
import { GoogleAnalytics } from '@next/third-parties/google';
import { Philosopher, DM_Sans } from 'next/font/google';
import { LayoutProps } from '@/types/Layout.types';
import Head from 'next/head';
import { cookies, headers } from 'next/headers';
import { store } from '@/store';
import { setLocale } from '@/store/langSlice';
import Script from 'next/script';
import NewFooterWrapper from '@/components/shared/footer/NewFooterWrapper';
const Providers = dynamic(() => import('@/components/Provider'));
const NavbarWrapper = dynamic(
  () => import('@/components/shared/navbar/NavbarWrapper'),
);
// const FooterWrapper = dynamic(
//   () => import('@/components/shared/footer/FooterWrapper'),
// );

const philosopher = Philosopher({
  subsets: ['latin'],
  weight: '400',
  variable: '--font-philosopher',
});

const noto_sans_arabic = DM_Sans({
  subsets: ['latin'],
  display: 'auto',
  variable: '--font-noto-sans-arabic',
  weight: '400',
});

const setLocaleToUserLocale = () => {
  let locale;
  const cookiesStore = cookies();
  const localeCookie = cookiesStore.get('locale');

  if (localeCookie) {
    locale = localeCookie.value;
  } else {
    const clientLang = headers()
      .get('Accept-Language')
      ?.split('-')[0]
      .split(',')[0];
    locale = clientLang ?? 'en';
  }
  store.dispatch(setLocale(locale));
  return locale;
};

export const metadata: Metadata = {
  title: {
    absolute: '',
    default: 'Zewail City of Science, Technology and Innovation (ZC) | Home',
    template: '%s | Zewail City',
  },
  description: 'Zewail City of Science and Technology, Established 2000',
  icons: {
    icon: '/favicon.png',
  },
};

const RootLayout = async ({ children }: LayoutProps): Promise<JSX.Element> => {
  setLocaleToUserLocale();
  return (
    <html className={`${philosopher.variable} ${noto_sans_arabic.variable}`}>
      <Head>
        <meta charSet="UTF-8" />
        <meta httpEquiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta
          name="description"
          content={
            String(metadata.description) || 'Generated by create next app'
          }
        />
        <link rel="icon" href="Images/ZC-logo.png" />
        <link
          rel="apple-touch-icon"
          href="/Images/zcLogo.svg"
          type="image/svg"
          sizes="144x144"
        ></link>
        <title>{String(metadata.title) || 'Create Next App'}</title>
      </Head>
      <body className="overflow-x-hidden relative p-0 m-0">
        <Providers>
          <NavbarWrapper />
          <main className="md:mt-10 pt-14">{children}</main>
          <NewFooterWrapper />
        </Providers>
        <Script src="/src/sienna.min.js" defer />
      </body>
      <GoogleAnalytics gaId="G-TFG76D2D6Y" />
      {/* <Script
        async
        src={`https://cse.google.com/cse.js?cx=${process.env.NEXT_GOOGLE_SEARCH_ENGINE_ID}`}
        defer
      ></Script> */}
    </html>
  );
};

export default RootLayout;
